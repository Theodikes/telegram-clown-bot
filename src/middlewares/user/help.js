const { isGroup, isAdmin, getSelf } = require("../../utils");

module.exports = async (ctx) => {
  if (isGroup(ctx)) return;

  const securityClearance = isAdmin(getSelf(ctx)) ? "admin" : "user";
  const availableOptions = {
    admin: [
      "Бан юзеров",
      "Внесение юзеров в скамлист",
      "Бан стикеров в беседе",
      "Получение списка заблокированных",
      "Доступ к полному скамлисту",
      "Проверка юзеров на скам",
    ],
    user: ["Проверка пользователей на скам"],
  };
  const formattedOptions = availableOptions[securityClearance]
    .map((option) => `\n*-* ${option}`)
    .join(";");

  const markdownMessage = `Доступные для вашего уровня доступа действия: 
    ${formattedOptions}


Способы использования:

    *1*. Вы пересылаете(forward) боту любое сообщение юзера. Способ ненадежный, поскольку боту по техническим причинам может быть недоступно id пользователя.

    *2*. В беседе, где есть бот, вы отвечаете на сообщение пользователя (reply) командой */isScam* и бот проверяет, есть ли человек в скам-листе

    *3*. Полноценный запрос к боту - */isScam userId @username*. Может быть указан как один параметр, так и оба. Если id указано, то оно должно быть первым параметром запроса.
            

*WARNING*: отсутствие человека в скам-листе не означает, что он не является скамером. Он может быть еще не занесен, либо мог просто изменить юзернейм (если вы делали запрос только по юзернейму)
`;

  await ctx.replyWithMarkdown(markdownMessage);
};
