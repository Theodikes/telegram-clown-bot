import { isGroup, isAdmin, getSelf } from "../utils.js";
import { OWNER } from "../../config.js";

export default async (ctx) => {
  if (isGroup(ctx)) return;

  let securityClearance = "user";
  if (isAdmin(getSelf(ctx))) securityClearance = "admin";
  if (getSelf(ctx) === OWNER) securityClearance = "owner";

  const clownUser = "Назначить юзера клоуном";
  const setUserAsScam = "Внесение юзеров в скамлист";
  const banSticker = "Бан стикеров в беседе";
  const getClownlist = "Получение списка клоунов";
  const getScamlist = "Получение скамлиста";
  const checkScam = "Проверка пользователей на скам";
  const info = "Получение информации о пользователе";
  const unclownAll = "Полная очистка клоун-листа";
  const addChat = "Добавление чата в базу для логов";
  const kickAllByTime = "Бан в чате всех зашедших";
  const underAttack = "Перевод чата в режим атаки";
  const ban = "Бан пользователей";
  const unban = "Разбан пользователей";
  const restrict = "Ограничение прав пользователей";

  const userCommands = [checkScam];
  const adminCommands = [
    ...userCommands,
    clownUser,
    setUserAsScam,
    banSticker,
    getClownlist,
    getScamlist,
    info,
  ];
  const ownerCommands = [
    unclownAll,
    addChat,
    kickAllByTime,
    underAttack,
    ban,
    unban,
    restrict,
  ];

  const availableOptions = {
    user: userCommands,
    admin: adminCommands,
    owner: ownerCommands,
  };

  const instructions = {
    [checkScam]: `*1*. Вы пересылаете(forward) боту любое сообщение юзера. Способ ненадежный, поскольку боту по техническим причинам может быть недоступно id пользователя.

*2*. В беседе, где есть бот, вы отвечаете на сообщение пользователя (reply) командой */isScam* и бот проверяет, есть ли человек в скам-листе

*3*. Полноценный запрос к боту - */isScam userId @username*. Может быть указан как один параметр, так и оба. Если id указано, то оно должно быть первым параметром запроса.
            

*WARNING*: отсутствие человека в скам-листе не означает, что он не является скамером. Он может быть еще не занесен, либо мог просто изменить юзернейм (если вы делали запрос только по юзернейму)`,

    [info]: `Отвечаете на сообщение пользователя в беседе командой */info*, чтобы получить его id и username. Если username не указан, будет выдано @null`,

    [clownUser]: `*1*. Ответить на сообщение пользователя в беседе командой */clown*, чтобы назначить клоуном (запретить писать сообщения), или */unclown*, чтобы разблокировать. Заблокированные юзеры не банятся, просто все их новые сообщения моментально удаляются, что позволяет применять команду */clown* к администраторам беседы.

*2*. Команда */clown userId @username*, может быть выполнена как в беседе, так и в личной переписке с ботом. userId - обязательный параметр, команда */unclown* работает аналогично`,

    [setUserAsScam]: `*1*. Ответить на сообщение пользователя в беседе командой */scam*, чтобы добавить в скамлист и автоматически заблокировать, или */noscam*, чтобы удалить из скам-листа и заблокировать. Если (вдруг) требуется разблокировать, не удаляя из скам-листа - используем */unclown* к добавленному в скамлист пользователю.
    
*2*. Полная команда - */scam userId @username*, userId - required. Желательно указывать username, поскольку по нему смогут проверить на скам обычные пользователи`,

    [banSticker]: `Так как стикер невозможно отправить вместе с текстом, его можно заблокировать лишь через личные сообщения с ботом. Отправьте в личку боту стикер, и он его заблокирует в беседе (будет автоматически удалять при отправке). Повторная отправка стикера в личку боту его разблокирует.
    
Примечание: админы бота могут использовать заблокированные стикеры в беседе`,

    [getClownlist]: `Отправляет полный банлист в формате id:username одним сообщением по команде */clowns* или */banned*. Команды работают только у администраторов, чтобы этим не заспамили чат.`,

    [getScamlist]: `Отправляет полный список скамеров в формате id:username одним сообщением по команде */scamlist* или */scammers*. Команды работают только у администраторов, чтобы этим не заспамили чат.`,

    [unclownAll]: `По команде */unclownAll* в чате очищает клоун-лист полностью`,

    [addChat]: `Техническое действие для логгирования заходящих в чат, команда */addChat*`,

    [kickAllByTime]: `Баним всех зашедших за определенный промежуток времени командой */kickAll time*. Параметр time - required, и имеет формат {number}{timeUnit}, например 10m, 5h или 1d`,

    [underAttack]: `Переводит чат, в котором была написана команда */underAttack*, в режим атакованного. Все заходящие пользователи автоматически удаляются ботом из беседы, сообщения о заходах и киках так же удаляются`,

    [ban]: `Блокировка пользователя в беседе ответом на его сообщение командой */ban time*. Кикает пользователя из беседы на определенное время, заданное параметром time, без возможности вернуться. Как пройдет время бана, пользователь сможет снова зайти в беседу (если она не приватная).
    
*time* не является обязательным параметром, если он не указан - бот заблокирует пользователя в чате навсегда или до разбана администратором`,

    [unban]: `Разблокировка пользователя в беседе командой */unban* в ответ на его сообщение. Если пользователь не в бане, бот уведомит об этом`,

    [restrict]: `Ответить на сообщение пользователя в беседе командой */restrict params*. Можно ограничить любые права пользователя в чате, как то: отправка сообщений, отправка опросов, отправка видео и картинок, отправка стикеров.
    
Params - необязательные параметры. Задаются в форме *--flag value* или *-flag value*, значения 'true' и '1' будут преобразованы в *true*, 'false' и '0' в *false* аналогично. Просто *--flag* без параметра - флагу присваивается значение true
    
Список флагов:
    *can_send_messages* - сообщения
    *can_send_polls* - опросы
    *can_send_other_messages* - стикеры, войс
    *can_send_media_messages* - картинки, видео, гифки
    *can_add_web_page_previews* - возможность добавлять превью к ссылкам
    *can_invite_users* - возможность приглашать людей в чат
    *can_change_info* - возможность менять информацию о чате, только для приватных чатов
    *can_pin_messages* - возможность закреплять сообщение, только для приватных чатов
        
При отправке команды по умолчанию список параметров пуст, что означает, что все флаги в false (т.к. их нет). Чтобы перевести все флаги в true, добавьте флаг *--def*
    
Пример команды, которая ограничит все права: */restrict*
Команда, которая снимет все ограничения: */restrict --def*
Команда, которая запретит отправлять только опросы: */restrict --can_send_polls false --def*`,
  };
  const formattedOptions = availableOptions[securityClearance]
    .map((option) => `\n*-* ${option}`)
    .join(";");

  const baseMessage = `Доступные для вашего уровня доступа действия: 
    ${formattedOptions}\n`;

  const markdownMessage =
    baseMessage +
    availableOptions[securityClearance].reduce(
      (acc, option) => acc + `\n\n\n*${option}*:\n\n ${instructions[option]}`,
      ""
    );

  await ctx.replyWithMarkdown(markdownMessage);
};
